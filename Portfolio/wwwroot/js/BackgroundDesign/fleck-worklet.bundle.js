(()=>{function t(t=[],s=1,r=!1,i){const e=(t=function(t,s){if(t=[...t],Array.isArray(t[0])||(t=t.map(({x:t,y:s})=>[t,s])),s){const s=t[t.length-1],r=t[t.length-2],i=t[0],e=t[1];t.unshift(s),t.unshift(r),t.push(i),t.push(e)}return t.flat()}(t,r)).length,h=e-4,n=r?t[2]:t[0],o=r?t[3]:t[1];let a="M"+[n,o];i&&i("MOVE",[n,o]);const c=r?e-4:e-2;for(let e=r?2:0;e<c;e+=2){const r=e?t[e-2]:t[0],n=e?t[e-1]:t[1],o=t[e+0],c=t[e+1],u=t[e+2],y=t[e+3],l=o+(u-r)/6*s,p=c+(y-n)/6*s,m=u-((e!==h?t[e+4]:u)-o)/6*s,g=y-((e!==h?t[e+5]:y)-c)/6*s;a+="C"+[l,p,m,g,u,y],i&&i("CURVE",[l,p,m,g,u,y])}return a}var s=class{constructor(t=0,s=0){this.x=t,this.y=s}static add(t,s){return t.copy().add(s.copy())}static rem(t,s){return t.copy().rem(s.copy())}static sub(t,s){return t.copy().sub(s.copy())}static mult(t,s){return t.copy().mult(s.copy())}static div(t,s){return t.copy().div(s.copy())}static dot(t,s){return t.copy().dot(s.copy())}static dist(t,s){return t.copy().dist(s.copy())}static lerp(t,s,r){return t.copy().lerp(s.copy().x,s.copy().y,r)}static rotate(t,s){return t.copy().rotate(s)}set(t,s){const r=this._formatArgs(t,s);return this.x=r.x,this.y=r.y,this}copy(){return new s(this.x,this.y)}toArray(){return[this.x,this.y]}toObject(){return{x:this.x,y:this.y}}add(t,s){const r=this._formatArgs(t,s);return this.x+=r.x,this.y+=r.y,this}rem(t,s){const r=this._formatArgs(t,s);return this.x=this.x%r.x,this.y=this.y%r.y,this}sub(t,s){const r=this._formatArgs(t,s);return this.x-=r.x,this.y-=r.y,this}mult(t,s){const r=this._formatArgs(t,s);return this.x*=r.x,this.y*=r.y,this}div(t,s){const r=this._formatArgs(t,s);return this.x/=r.x,this.y/=r.y,this}mag(){return Math.sqrt(this.magSq())}magSq(){const t=this.x,s=this.y;return t*t+s*s}dot(t,s){const r=this._formatArgs(t,s);return this.x*r.x+this.y*r.y}dist(t){return t.copy().sub(this).mag()}normalize(){const t=this.mag();return 0!==t&&this.mult(1/t),this}limit(t){const s=this.magSq();return s>t*t&&this.div(Math.sqrt(s)).mult(t),this}setMag(t){return this.normalize().mult(t)}heading(){return Math.atan2(this.y,this.x)}rotate(t){let s=this.heading()+t;const r=this.mag();return this.x=Math.cos(s)*r,this.y=Math.sin(s)*r,this}lerp(t,s,r){return this.x+=(t-this.x)*r,this.y+=(s-this.y)*r,this}_formatArgs(t,s){switch(t.constructor.name){case"Vector2D":return{x:t.x,y:t.y};default:return s||(s=t),{x:t,y:s}}}},r=[...Array(8)].map((t,s)=>`--fleck-color-${s+1}`);registerPaint("fleck",class{static get inputProperties(){return["--fleck-seed","--fleck-count","--fleck-size-base",...r]}getDefinedColors(t){return r.map(s=>t.get(s).toString().trim()).filter(t=>t)}parseProp(t,s=!1){const r=t.toString().trim();return s?parseFloat(r):r}paint(r,i,e){const h=this.parseProp(e.get("--fleck-seed")),n=this.parseProp(e.get("--fleck-count")),o=this.parseProp(e.get("--fleck-size-base"),!0),a=this.getDefinedColors(e),c=i.width,u=i.height,y=(l=h,function(t,s){l=1831565813+(l|=0)|0;var r=Math.imul(l^l>>>15,1|l);return(((r=r+Math.imul(r^r>>>7,61|r)^r)^r>>>14)>>>0)/4294967296*(s-t)+t});var l;for(let i=0;i<n;i++){const i=~~y(6,8),e=[],h=2*Math.PI/i,n=new s(y(0,c),y(0,u));let l=o;y(0,1)>.125&&(l/=2),y(0,1)>.925&&(l*=4),l=Math.max(1,Math.min(l,24));for(let t=1;t<=i;t++){const r=t*h,i=new s(n.x+Math.cos(r)*l,n.y+Math.sin(r)*l);e.push(s.lerp(i,n,y(0,.625)))}const p=a[~~y(0,a.length)];r.fillStyle=p,r.beginPath(),t(e,1,!0,(t,s)=>{"MOVE"===t?r.moveTo(...s):r.bezierCurveTo(...s)}),r.fill()}}})})();